{"ast":null,"code":"var _jsxFileName = \"/Users/yminjuu/Documents/\\u1100\\u1162\\u110B\\u1175\\u11AB \\u1111\\u1173\\u11AF\\u110C\\u1166\\u11A8/React.js Project/EmotionDiary/src/components/DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useContext, useRef, useState } from \"react\";\nimport MyButton from \"./MyButton\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport EmotionItem from \"./EmotionItem\";\nimport { emotionList } from \"../util/emotion\";\nimport React from \"react\";\n\n//props로 받는 것: 수정하기를 누른 경우에 대비하여 originData를 받아와 띄운다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryEditor = ({\n  isEdit,\n  originData\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  //날짜 선택 관리\n  const [date, setDate] = useState(isEdit ? new Date(originData.date).toISOString().slice(0, 10) : new Date().toISOString().slice(0, 10));\n\n  //감정 선택 관리\n  const [emotion, setEmotion] = useState(isEdit ? originData.emotion : 3);\n  const handleClickEmotion = useCallback(emotion => {\n    setEmotion(emotion);\n  }, []);\n\n  //본문 작성 관리\n  const [content, setContent] = useState(isEdit ? originData.content : \"\");\n  const contentInput = useRef();\n\n  //1. 수정 완료 관리\n  const onEdit = useContext(DiaryDispatchContext).onEdit; //App.js에서 ContextProvider에서 뿌린 함수를 받아옴\n\n  const handleSubmit = () => {\n    if (window.confirm(\"일기를 수정하시겠습니까?\")) {\n      onEdit(originData.id, date, content, emotion);\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  };\n\n  //2. 새 일기 작성에서 일기를 추가할 때\n  const onCreate = useContext(DiaryDispatchContext).onCreate; //context로부터 onCreate 함수를 받아옴\n\n  //새로운 일기 추가 관리\n  const AddNewDiary = () => {\n    if (content.length < 1) {\n      contentInput.current.focus();\n      return;\n    }\n    if (window.confirm(\"새로운 일기를 작성하시겠습니까?\")) {\n      const newDate = new Date(date).getTime();\n      onCreate({\n        emotion,\n        content,\n        date: newDate\n      });\n      setDate(new Date().toISOString().slice(0, 10));\n      setEmotion(3);\n      setContent(\"\");\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            type: \"date\",\n            value: date,\n            onChange: e => {\n              setDate(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n            onClick: handleClickEmotion,\n            ...it,\n            isSelected: it.emotion_id === emotion\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box text_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: contentInput,\n            placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB0A8\",\n            value: content,\n            onChange: e => {\n              contentInput.current.focus();\n              setContent(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control_box\",\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"취소하기\",\n            type: \"default\",\n            onClick: () => {\n              navigate(-1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"작성 완료\",\n            type: \"positive\",\n            onClick: isEdit ? handleSubmit : AddNewDiary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryEditor, \"otewHwLYN29tTTZBpgSOQ67OoHw=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default _c2 = /*#__PURE__*/React.memo(DiaryEditor);\nvar _c, _c2;\n$RefreshReg$(_c, \"DiaryEditor\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useCallback","useContext","useRef","useState","MyButton","DiaryDispatchContext","useNavigate","EmotionItem","emotionList","React","jsxDEV","_jsxDEV","DiaryEditor","isEdit","originData","_s","navigate","date","setDate","Date","toISOString","slice","emotion","setEmotion","handleClickEmotion","content","setContent","contentInput","onEdit","handleSubmit","window","confirm","id","replace","onCreate","AddNewDiary","length","current","focus","newDate","getTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","map","it","onClick","isSelected","emotion_id","ref","placeholder","text","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/yminjuu/Documents/개인 플젝/React.js Project/EmotionDiary/src/components/DiaryEditor.js"],"sourcesContent":["import { useCallback, useContext, useRef, useState } from \"react\";\nimport MyButton from \"./MyButton\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport EmotionItem from \"./EmotionItem\";\nimport { emotionList } from \"../util/emotion\";\nimport React from \"react\";\n\n//props로 받는 것: 수정하기를 누른 경우에 대비하여 originData를 받아와 띄운다.\nconst DiaryEditor = ({ isEdit, originData }) => {\n  const navigate = useNavigate();\n\n  //날짜 선택 관리\n  const [date, setDate] = useState(\n    isEdit\n      ? new Date(originData.date).toISOString().slice(0, 10)\n      : new Date().toISOString().slice(0, 10)\n  );\n\n  //감정 선택 관리\n  const [emotion, setEmotion] = useState(isEdit ? originData.emotion : 3);\n\n  const handleClickEmotion = useCallback((emotion) => {\n    setEmotion(emotion);\n  }, []);\n\n  //본문 작성 관리\n  const [content, setContent] = useState(isEdit ? originData.content : \"\");\n\n  const contentInput = useRef();\n\n  //1. 수정 완료 관리\n  const onEdit = useContext(DiaryDispatchContext).onEdit; //App.js에서 ContextProvider에서 뿌린 함수를 받아옴\n\n  const handleSubmit = () => {\n    if (window.confirm(\"일기를 수정하시겠습니까?\")) {\n      onEdit(originData.id, date, content, emotion);\n      navigate(\"/\", { replace: true });\n    }\n  };\n\n  //2. 새 일기 작성에서 일기를 추가할 때\n  const onCreate = useContext(DiaryDispatchContext).onCreate; //context로부터 onCreate 함수를 받아옴\n\n  //새로운 일기 추가 관리\n  const AddNewDiary = () => {\n    if (content.length < 1) {\n      contentInput.current.focus();\n      return;\n    }\n    if (window.confirm(\"새로운 일기를 작성하시겠습니까?\")) {\n      const newDate = new Date(date).getTime();\n      onCreate({ emotion, content, date: newDate });\n      setDate(new Date().toISOString().slice(0, 10));\n      setEmotion(3);\n      setContent(\"\");\n      navigate(\"/\", { replace: true });\n    }\n  };\n\n  return (\n    <div className=\"DiaryEditor\">\n      <div>\n        <section>\n          <h4>오늘은 언제인가요?</h4>\n          <div className=\"input_box\">\n            <input\n              className=\"input_date\"\n              type=\"date\"\n              value={date}\n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n            ></input>\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 감정</h4>\n          <div className=\"input_box emotion_list_wrapper\">\n            {emotionList.map((it) => (\n              <EmotionItem\n                onClick={handleClickEmotion}\n                key={it.emotion_id}\n                {...it}\n                isSelected={it.emotion_id === emotion}\n              ></EmotionItem>\n            ))}\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 일기</h4>\n          <div className=\"input_box text_wrapper\">\n            <textarea\n              ref={contentInput}\n              placeholder=\"오늘은 어땠남\"\n              value={content}\n              onChange={(e) => {\n                contentInput.current.focus();\n                setContent(e.target.value);\n              }}\n            ></textarea>\n          </div>\n        </section>\n        <section>\n          <div className=\"control_box\">\n            <MyButton\n              text={\"취소하기\"}\n              type={\"default\"}\n              onClick={() => {\n                navigate(-1);\n              }}\n            ></MyButton>\n            <MyButton\n              text={\"작성 완료\"}\n              type={\"positive\"}\n              onClick={isEdit ? handleSubmit : AddNewDiary}\n            ></MyButton>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DiaryEditor);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}