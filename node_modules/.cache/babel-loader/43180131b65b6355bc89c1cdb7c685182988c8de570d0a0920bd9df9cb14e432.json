{"ast":null,"code":"import{useNavigate,useParams}from\"react-router-dom\";import MyHeader from\"../components/MyHeader\";import MyButton from\"../components/MyButton\";import{useContext,useEffect,useState}from\"react\";import{DiaryStateContext}from\"../App\";import DiaryPage from\"../components/DiaryPage\";import{getStringDate}from\"../util/date\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Diary=()=>{const{id}=useParams();//몇번째 diary인지 받아옴\nconst navigate=useNavigate();const diaryList=useContext(DiaryStateContext);//페이지마다 title 변경하기\nuseEffect(()=>{const titleElement=document.getElementsByTagName(\"title\")[0];titleElement.innerHTML=\"\\uAC10\\uC815 \\uC77C\\uAE30\\uC7A5 - \".concat(id,\"\\uBC88 \\uC77C\\uAE30\");});//일기 데이터 관리\nconst[pageData,setPageData]=useState();//누른 일기 데이터 객체만 받아옴 - 전체 일기 데이터가 1개 이상일 때에만/ useEffect를 사용해서 처음 마운트될 때에만\nuseEffect(()=>{if(diaryList.length>=1){const targetDiary=diaryList.find(it=>parseInt(it.id)===parseInt(id));if(targetDiary){//truthy\n//targetDiary를 찾았다면\nsetPageData(targetDiary);}else{//falsy\nconsole.log(\"hi\");alert(\"없는 일기입니다\");navigate(\"/\",{replace:true});}}},[id,diaryList]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MyHeader,{leftChild:/*#__PURE__*/_jsx(MyButton,{text:\"< 뒤로가기\",type:\"default\",onClick:()=>{navigate(-1);}}),headText:pageData&&\"\".concat(getStringDate(new Date(pageData.date)),\" \\uAE30\\uB85D\"),rightChild:/*#__PURE__*/_jsx(MyButton,{text:\"수정하기\",type:\"default\",onClick:()=>{navigate(\"/edit/\".concat(id));}})}),/*#__PURE__*/_jsx(\"div\",{children:pageData&&/*#__PURE__*/_jsx(DiaryPage,{pageData:pageData})})]});};export default Diary;","map":{"version":3,"names":["useNavigate","useParams","MyHeader","MyButton","useContext","useEffect","useState","DiaryStateContext","DiaryPage","getStringDate","jsx","_jsx","jsxs","_jsxs","Diary","id","navigate","diaryList","titleElement","document","getElementsByTagName","innerHTML","concat","pageData","setPageData","length","targetDiary","find","it","parseInt","console","log","alert","replace","children","leftChild","text","type","onClick","headText","Date","date","rightChild"],"sources":["/Users/yminjuu/Documents/개인 플젝/React.js Project/EmotionDiary/src/pages/Diary.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryPage from \"../components/DiaryPage\";\nimport { getStringDate } from \"../util/date\";\n\nconst Diary = () => {\n  const { id } = useParams(); //몇번째 diary인지 받아옴\n  const navigate = useNavigate();\n  const diaryList = useContext(DiaryStateContext);\n\n  //페이지마다 title 변경하기\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기`;\n  });\n\n  //일기 데이터 관리\n  const [pageData, setPageData] = useState();\n\n  //누른 일기 데이터 객체만 받아옴 - 전체 일기 데이터가 1개 이상일 때에만/ useEffect를 사용해서 처음 마운트될 때에만\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n\n      if (targetDiary) {\n        //truthy\n        //targetDiary를 찾았다면\n        setPageData(targetDiary);\n      } else {\n        //falsy\n        console.log(\"hi\");\n        alert(\"없는 일기입니다\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  return (\n    <div>\n      <MyHeader\n        leftChild={\n          <MyButton\n            text={\"< 뒤로가기\"}\n            type={\"default\"}\n            onClick={() => {\n              navigate(-1);\n            }}\n          ></MyButton>\n        }\n        headText={pageData && `${getStringDate(new Date(pageData.date))} 기록`}\n        rightChild={\n          <MyButton\n            text={\"수정하기\"}\n            type={\"default\"}\n            onClick={() => {\n              navigate(`/edit/${id}`);\n            }}\n          ></MyButton>\n        }\n      ></MyHeader>\n      <div>{pageData && <DiaryPage pageData={pageData}></DiaryPage>}</div>\n    </div>\n  );\n};\n\nexport default Diary;\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,OAASC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACvD,OAASC,iBAAiB,KAAQ,QAAQ,CAC1C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,OAASC,aAAa,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7C,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAAEC,EAAG,CAAC,CAAGd,SAAS,CAAC,CAAC,CAAE;AAC5B,KAAM,CAAAe,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAiB,SAAS,CAAGb,UAAU,CAACG,iBAAiB,CAAC,CAE/C;AACAF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,YAAY,CAAGC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAC9DF,YAAY,CAACG,SAAS,sCAAAC,MAAA,CAAeP,EAAE,uBAAM,CAC/C,CAAC,CAAC,CAEF;AACA,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAE1C;AACAD,SAAS,CAAC,IAAM,CACd,GAAIY,SAAS,CAACQ,MAAM,EAAI,CAAC,CAAE,CACzB,KAAM,CAAAC,WAAW,CAAGT,SAAS,CAACU,IAAI,CAC/BC,EAAE,EAAKC,QAAQ,CAACD,EAAE,CAACb,EAAE,CAAC,GAAKc,QAAQ,CAACd,EAAE,CACzC,CAAC,CAED,GAAIW,WAAW,CAAE,CACf;AACA;AACAF,WAAW,CAACE,WAAW,CAAC,CAC1B,CAAC,IAAM,CACL;AACAI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC,CACjBC,KAAK,CAAC,UAAU,CAAC,CACjBhB,QAAQ,CAAC,GAAG,CAAE,CAAEiB,OAAO,CAAE,IAAK,CAAC,CAAC,CAClC,CACF,CACF,CAAC,CAAE,CAAClB,EAAE,CAAEE,SAAS,CAAC,CAAC,CAEnB,mBACEJ,KAAA,QAAAqB,QAAA,eACEvB,IAAA,CAACT,QAAQ,EACPiC,SAAS,cACPxB,IAAA,CAACR,QAAQ,EACPiC,IAAI,CAAE,QAAS,CACfC,IAAI,CAAE,SAAU,CAChBC,OAAO,CAAEA,CAAA,GAAM,CACbtB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACd,CAAE,CACO,CACZ,CACDuB,QAAQ,CAAEhB,QAAQ,KAAAD,MAAA,CAAOb,aAAa,CAAC,GAAI,CAAA+B,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAAC,CAAC,iBAAM,CACrEC,UAAU,cACR/B,IAAA,CAACR,QAAQ,EACPiC,IAAI,CAAE,MAAO,CACbC,IAAI,CAAE,SAAU,CAChBC,OAAO,CAAEA,CAAA,GAAM,CACbtB,QAAQ,UAAAM,MAAA,CAAUP,EAAE,CAAE,CAAC,CACzB,CAAE,CACO,CACZ,CACQ,CAAC,cACZJ,IAAA,QAAAuB,QAAA,CAAMX,QAAQ,eAAIZ,IAAA,CAACH,SAAS,EAACe,QAAQ,CAAEA,QAAS,CAAY,CAAC,CAAM,CAAC,EACjE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}