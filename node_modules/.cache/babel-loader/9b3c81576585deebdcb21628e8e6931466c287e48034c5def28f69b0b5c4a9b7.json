{"ast":null,"code":"var _jsxFileName = \"/Users/yminjuu/Documents/\\u1100\\u1162\\u110B\\u1175\\u11AB \\u1111\\u1173\\u11AF\\u110C\\u1166\\u11A8/React.js Project/EmotionDiary/src/pages/Edit.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport DiaryEditor from \"../components/DiaryEditor\";\nimport { useContext, useEffect } from \"react\";\nimport { DiaryDispatchContext, DiaryStateContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  //id와 diaryList 받아오기\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n\n  //수정하기를 누른 일기 데이터를 불러오기 위함\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      console.log(targetDiary);\n      if (targetDiary) {\n        //truthy, falsy를 사용하여 targetDiary가 truthy할 때에만 수정 페이지를 띄운다\n      } else {\n        console.log(\"navigate\");\n        navigate(\"/\", {\n          replace: true\n        }); //replace: true -> 뒤로가기를 못하게 막는다\n      }\n    }\n  }, [id, diaryList]);\n  //useEffect를 사용하여\n  //id와 diaryList가 달라지면 새로 받아와야 하기 때문에\n  //수정하기\n  const onEdit = useContext(DiaryDispatchContext).onEdit;\n  const handleEdit = () => {\n    if (window.confirm(\"일기를 수정하시겠습니까?\")) {\n      onEdit({});\n    }\n  };\n\n  //삭제하기\n  const onRemove = useContext(DiaryDispatchContext).onRemove;\n  const handleDelete = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      onRemove({\n        id\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"< 뒤로가기\",\n        type: \"default\",\n        onClick: () => {\n          navigate(\"/\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this),\n      headText: \"일기 수정하기\",\n      rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        type: \"negative\",\n        text: \"삭제하기\",\n        onClick: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryEditor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Edit, \"Jn/piwL7n8O4fL6yJZHjiwcSUjk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useNavigate","useParams","MyHeader","MyButton","DiaryEditor","useContext","useEffect","DiaryDispatchContext","DiaryStateContext","jsxDEV","_jsxDEV","Edit","_s","id","console","log","diaryList","navigate","length","targetDiary","find","it","parseInt","replace","onEdit","handleEdit","window","confirm","onRemove","handleDelete","children","leftChild","text","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","headText","rightChild","_c","$RefreshReg$"],"sources":["/Users/yminjuu/Documents/개인 플젝/React.js Project/EmotionDiary/src/pages/Edit.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport DiaryEditor from \"../components/DiaryEditor\";\nimport { useContext, useEffect } from \"react\";\nimport { DiaryDispatchContext, DiaryStateContext } from \"../App\";\n\nconst Edit = () => {\n  //id와 diaryList 받아오기\n  const { id } = useParams();\n  console.log(id);\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n\n  //수정하기를 누른 일기 데이터를 불러오기 위함\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n      console.log(targetDiary);\n\n      if (targetDiary) {\n        //truthy, falsy를 사용하여 targetDiary가 truthy할 때에만 수정 페이지를 띄운다\n      } else {\n        console.log(\"navigate\");\n        navigate(\"/\", { replace: true }); //replace: true -> 뒤로가기를 못하게 막는다\n      }\n    }\n  }, [id, diaryList]);\n  //useEffect를 사용하여\n  //id와 diaryList가 달라지면 새로 받아와야 하기 때문에\n  //수정하기\n  const onEdit = useContext(DiaryDispatchContext).onEdit;\n\n  const handleEdit = () => {\n    if (window.confirm(\"일기를 수정하시겠습니까?\")) {\n      onEdit({});\n    }\n  };\n\n  //삭제하기\n  const onRemove = useContext(DiaryDispatchContext).onRemove;\n\n  const handleDelete = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      onRemove({ id });\n    }\n  };\n\n  return (\n    <div>\n      <MyHeader\n        leftChild={\n          <MyButton\n            text={\"< 뒤로가기\"}\n            type={\"default\"}\n            onClick={() => {\n              navigate(\"/\");\n            }}\n          ></MyButton>\n        }\n        headText={\"일기 수정하기\"}\n        rightChild={\n          <MyButton\n            type={\"negative\"}\n            text={\"삭제하기\"}\n            onClick={handleDelete}\n          ></MyButton>\n        }\n      ></MyHeader>\n      <DiaryEditor></DiaryEditor>\n    </div>\n  );\n};\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}