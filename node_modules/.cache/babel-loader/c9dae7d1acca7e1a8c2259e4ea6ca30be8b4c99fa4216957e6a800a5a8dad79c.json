{"ast":null,"code":"import{useNavigate,useParams}from\"react-router-dom\";import MyHeader from\"../components/MyHeader\";import MyButton from\"../components/MyButton\";import DiaryEditor from\"../components/DiaryEditor\";import{useContext,useEffect,useState}from\"react\";import{DiaryDispatchContext,DiaryStateContext}from\"../App\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Edit=()=>{//id와 diaryList 받아오기\nconst{id}=useParams();const diaryList=useContext(DiaryStateContext);const navigate=useNavigate();//페이지마다 title 변경하기\nuseEffect(()=>{const titleElement=document.getElementsByTagName(\"title\")[0];titleElement.innerHTML=\"\\uAC10\\uC815 \\uC77C\\uAE30\\uC7A5 - \".concat(id,\"\\uBC88 \\uC77C\\uAE30 \\uC218\\uC815\");});//수정 데이터 저장 state\nconst[originData,setOriginData]=useState();//수정할 원본 데이터\n//수정하기를 누른 일기 데이터를 불러오기 위함\nuseEffect(()=>{if(diaryList.length>=1){const targetDiary=diaryList.find(it=>parseInt(it.id)===parseInt(id));if(targetDiary){setOriginData(targetDiary);//truthy, falsy를 사용하여 targetDiary가 truthy할 때에만 수정 페이지를 띄운다\n}else{console.log(\"navigate\");navigate(\"/\",{replace:true});//replace: true -> 뒤로가기를 못하게 막는다\n}}},[id,diaryList]);//useEffect를 사용하여\n//id와 diaryList가 달라지면 새로 받아와야 하기 때문에\n//삭제 작업 처리\nconst onRemove=useContext(DiaryDispatchContext).onRemove;const handleDelete=()=>{if(window.confirm(\"정말 삭제하시겠습니까?\")){console.log(id);console.log(originData.id);onRemove(originData.id);navigate(\"/\",{replace:true});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MyHeader,{leftChild:/*#__PURE__*/_jsx(MyButton,{text:\"< 뒤로가기\",type:\"default\",onClick:()=>{navigate(\"/\");}}),headText:\"일기 수정하기\",rightChild:/*#__PURE__*/_jsx(MyButton,{type:\"negative\",text:\"삭제하기\",onClick:handleDelete})}),/*#__PURE__*/_jsx(\"div\",{children:originData&&/*#__PURE__*/_jsx(DiaryEditor,{isEdit:true,originData:originData})})]});};export default Edit;","map":{"version":3,"names":["useNavigate","useParams","MyHeader","MyButton","DiaryEditor","useContext","useEffect","useState","DiaryDispatchContext","DiaryStateContext","jsx","_jsx","jsxs","_jsxs","Edit","id","diaryList","navigate","titleElement","document","getElementsByTagName","innerHTML","concat","originData","setOriginData","length","targetDiary","find","it","parseInt","console","log","replace","onRemove","handleDelete","window","confirm","children","leftChild","text","type","onClick","headText","rightChild","isEdit"],"sources":["/Users/yminjuu/Documents/개인 플젝/React.js Project/EmotionDiary/src/pages/Edit.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport DiaryEditor from \"../components/DiaryEditor\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DiaryDispatchContext, DiaryStateContext } from \"../App\";\n\nconst Edit = () => {\n  //id와 diaryList 받아오기\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n\n  //페이지마다 title 변경하기\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기 수정`;\n  });\n\n  //수정 데이터 저장 state\n  const [originData, setOriginData] = useState(); //수정할 원본 데이터\n\n  //수정하기를 누른 일기 데이터를 불러오기 위함\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n\n      if (targetDiary) {\n        setOriginData(targetDiary);\n        //truthy, falsy를 사용하여 targetDiary가 truthy할 때에만 수정 페이지를 띄운다\n      } else {\n        console.log(\"navigate\");\n        navigate(\"/\", { replace: true }); //replace: true -> 뒤로가기를 못하게 막는다\n      }\n    }\n  }, [id, diaryList]);\n  //useEffect를 사용하여\n  //id와 diaryList가 달라지면 새로 받아와야 하기 때문에\n\n  //삭제 작업 처리\n  const onRemove = useContext(DiaryDispatchContext).onRemove;\n\n  const handleDelete = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      console.log(id);\n      console.log(originData.id);\n      onRemove(originData.id);\n      navigate(\"/\", { replace: true });\n    }\n  };\n\n  return (\n    <div>\n      <MyHeader\n        leftChild={\n          <MyButton\n            text={\"< 뒤로가기\"}\n            type={\"default\"}\n            onClick={() => {\n              navigate(\"/\");\n            }}\n          ></MyButton>\n        }\n        headText={\"일기 수정하기\"}\n        rightChild={\n          <MyButton\n            type={\"negative\"}\n            text={\"삭제하기\"}\n            onClick={handleDelete}\n          ></MyButton>\n        }\n      ></MyHeader>\n      <div>\n        {originData && (\n          <DiaryEditor isEdit={true} originData={originData}></DiaryEditor>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}