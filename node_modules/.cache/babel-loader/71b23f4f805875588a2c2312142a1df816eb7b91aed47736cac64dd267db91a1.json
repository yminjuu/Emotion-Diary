{"ast":null,"code":"import{useNavigate}from\"react-router-dom\";import MyButton from\"../components/MyButton\";import MyHeader from\"../components/MyHeader\";import DiaryList from\"../components/DiaryList\";import{useContext,useEffect,useState}from\"react\";import{DiaryStateContext}from\"../App\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{//일기 리스트 관리------\nconst diaryList=useContext(DiaryStateContext);const[data,setData]=useState([]);//날짜 관리 (월, 년)------\nconst[curDate,setCurDate]=useState(new Date());//기본값: 현재 시간\nconst onIncrease=()=>{setCurDate(new Date(curDate.getFullYear(),curDate.getMonth()+1,curDate.getDate()));};const onDecrease=()=>{setCurDate(new Date(curDate.getFullYear(),curDate.getMonth()-1,curDate.getDate()));};const headText=\"\".concat(curDate.getFullYear(),\"\\uB144 \").concat(curDate.getMonth()+1,\"\\uC6D4\");//날짜에 따른 데이터 관리\nuseEffect(()=>{if(diaryList.length>=1){const firstDay=new Date(curDate.getFullYear(),curDate.getMonth(),1).getTime();const lastDay=new Date(curDate.getFullYear(),curDate.getMonth()+1,0,23,59,59).getTime();setData(diaryList.filter(it=>firstDay<=it.date&&it.date<lastDay));}},[diaryList,curDate]);useEffect(()=>{},[data]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MyHeader,{leftChild:/*#__PURE__*/_jsx(MyButton,{text:\"<\",onClick:onDecrease}),headText:headText,rightChild:/*#__PURE__*/_jsx(MyButton,{onClick:onIncrease,text:\">\"})}),/*#__PURE__*/_jsx(DiaryList,{diaryList:data})]});};export default Home;","map":{"version":3,"names":["useNavigate","MyButton","MyHeader","DiaryList","useContext","useEffect","useState","DiaryStateContext","jsx","_jsx","jsxs","_jsxs","Home","diaryList","data","setData","curDate","setCurDate","Date","onIncrease","getFullYear","getMonth","getDate","onDecrease","headText","concat","length","firstDay","getTime","lastDay","filter","it","date","children","leftChild","text","onClick","rightChild"],"sources":["/Users/yminjuu/Documents/개인 플젝/React.js Project/EmotionDiary/src/pages/Home.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport MyButton from \"../components/MyButton\";\nimport MyHeader from \"../components/MyHeader\";\nimport DiaryList from \"../components/DiaryList\";\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\n\nconst Home = () => {\n  //일기 리스트 관리------\n  const diaryList = useContext(DiaryStateContext);\n  const [data, setData] = useState([]);\n\n  //날짜 관리 (월, 년)------\n  const [curDate, setCurDate] = useState(new Date()); //기본값: 현재 시간\n\n  const onIncrease = () => {\n    setCurDate(\n      new Date(curDate.getFullYear(), curDate.getMonth() + 1, curDate.getDate())\n    );\n  };\n\n  const onDecrease = () => {\n    setCurDate(\n      new Date(curDate.getFullYear(), curDate.getMonth() - 1, curDate.getDate())\n    );\n  };\n\n  const headText = `${curDate.getFullYear()}년 ${curDate.getMonth() + 1}월`;\n\n  //날짜에 따른 데이터 관리\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const firstDay = new Date(\n        curDate.getFullYear(),\n        curDate.getMonth(),\n        1\n      ).getTime();\n\n      const lastDay = new Date(\n        curDate.getFullYear(),\n        curDate.getMonth() + 1,\n        0,\n        23,\n        59,\n        59\n      ).getTime();\n\n      setData(\n        diaryList.filter((it) => firstDay <= it.date && it.date < lastDay)\n      );\n    }\n  }, [diaryList, curDate]);\n\n  useEffect(() => {}, [data]);\n\n  return (\n    <div>\n      <MyHeader\n        leftChild={<MyButton text={\"<\"} onClick={onDecrease}></MyButton>}\n        headText={headText}\n        rightChild={<MyButton onClick={onIncrease} text={\">\"}></MyButton>}\n      ></MyHeader>\n      <DiaryList diaryList={data}></DiaryList>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}