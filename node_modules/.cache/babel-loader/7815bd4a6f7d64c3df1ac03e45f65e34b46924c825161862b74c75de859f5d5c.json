{"ast":null,"code":"var _jsxFileName = \"/Users/yminjuu/Documents/\\u1100\\u1162\\u110B\\u1175\\u11AB \\u1111\\u1173\\u11AF\\u110C\\u1166\\u11A8/React.js Project/EmotionDiary/src/pages/Edit.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet toggle = 0;\nconst Edit = () => {\n  _s();\n  //useNavigate는 다른 url로 가게 해주는 함수를 반환한다.\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  console.log(`id: ${id}`);\n  const mode = searchParams.get('mode');\n  console.log(`mode: ${mode}`);\n  const change = () => {\n    //setSearchParams에 객체를 전달한다.\n    if (toggle === 0) {\n      setSearchParams({\n        who: 'MARK'\n      });\n      toggle = 1;\n    } else {\n      if (toggle === 1) {\n        setSearchParams({\n          id: '2024',\n          mode: 'dark'\n        });\n        toggle = 0;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC774\\uACF3\\uC740 \\uC77C\\uAE30\\uB97C \\uC218\\uC815\\uD558\\uB294 \\uD398\\uC774\\uC9C0\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: change,\n      children: \"QueryString \\uBC14\\uAFB8\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate(\"/home\");\n      },\n      children: \"HOME\\uC73C\\uB85C \\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate(-1); //뒤로가기\n      },\n      children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Edit, \"Pg94gJPzwZJqWLTEeJkpdadQbvQ=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["useNavigate","useSearchParams","jsxDEV","_jsxDEV","toggle","Edit","_s","navigate","searchParams","setSearchParams","id","get","console","log","mode","change","who","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yminjuu/Documents/개인 플젝/React.js Project/EmotionDiary/src/pages/Edit.js"],"sourcesContent":["import { useNavigate, useSearchParams } from \"react-router-dom\";\n\nlet toggle= 0;\n\nconst Edit = () => {\n    //useNavigate는 다른 url로 가게 해주는 함수를 반환한다.\n    const navigate = useNavigate();\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const id= searchParams.get('id');\n    console.log(`id: ${id}`);\n\n    const mode = searchParams.get('mode');\n    console.log(`mode: ${mode}`);\n\n    const change = () => {\n        //setSearchParams에 객체를 전달한다.\n        if (toggle===0) {\n            setSearchParams({\n            who: 'MARK'\n        });\n        toggle=1;\n    }\n    else {\n        if (toggle===1) {\n            setSearchParams({\n            id: '2024',\n            mode: 'dark',\n        });\n        toggle=0;\n    }}\n    };\n\n    return(\n        <div>\n            <h1>Edit</h1>\n            <p>이곳은 일기를 수정하는 페이지입니다.</p>\n            <button onClick={change}>QueryString 바꾸기</button>\n            <button onClick={()=>{\n                navigate(\"/home\");\n            }}>HOME으로 가기</button>\n            <button onClick={()=>\n            {\n                navigate(-1); //뒤로가기\n            }}>뒤로가기</button>\n        </div>\n    )\n}\n\nexport default Edit;\n\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,IAAIC,MAAM,GAAE,CAAC;AAEb,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf;EACA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGR,eAAe,CAAC,CAAC;EAEzD,MAAMS,EAAE,GAAEF,YAAY,CAACG,GAAG,CAAC,IAAI,CAAC;EAChCC,OAAO,CAACC,GAAG,CAAE,OAAMH,EAAG,EAAC,CAAC;EAExB,MAAMI,IAAI,GAAGN,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;EACrCC,OAAO,CAACC,GAAG,CAAE,SAAQC,IAAK,EAAC,CAAC;EAE5B,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB;IACA,IAAIX,MAAM,KAAG,CAAC,EAAE;MACZK,eAAe,CAAC;QAChBO,GAAG,EAAE;MACT,CAAC,CAAC;MACFZ,MAAM,GAAC,CAAC;IACZ,CAAC,MACI;MACD,IAAIA,MAAM,KAAG,CAAC,EAAE;QACZK,eAAe,CAAC;UAChBC,EAAE,EAAE,MAAM;UACVI,IAAI,EAAE;QACV,CAAC,CAAC;QACFV,MAAM,GAAC,CAAC;MACZ;IAAC;EACD,CAAC;EAED,oBACID,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACblB,OAAA;MAAAc,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3BlB,OAAA;MAAQmB,OAAO,EAAEP,MAAO;MAAAE,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAI;QACjBf,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAE;MAAAU,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrBlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KACjB;QACIf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAE;MAAAU,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAAAf,EAAA,CA5CKD,IAAI;EAAA,QAEWL,WAAW,EAEYC,eAAe;AAAA;AAAAsB,EAAA,GAJrDlB,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}