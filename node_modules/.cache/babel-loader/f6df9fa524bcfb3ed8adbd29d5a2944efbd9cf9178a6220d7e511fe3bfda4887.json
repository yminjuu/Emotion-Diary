{"ast":null,"code":"var _jsxFileName = \"/Users/yminjuu/Documents/\\u1100\\u1162\\u110B\\u1175\\u11AB \\u1111\\u1173\\u11AF\\u110C\\u1166\\u11A8/React.js Project/EmotionDiary/src/components/DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport MyButton from \"./MyButton\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport EmotionItem from \"./EmotionItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst env = process.env;\nenv.PUBLIC_URL = env.PUBLIC_URL || \"\";\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n  emotion_discript: \"완전 좋음\",\n  emotion_clicked: \"EmotionItem_off\"\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n  emotion_discript: \"좋음\",\n  emotion_clicked: \"EmotionItem_off\"\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n  emotion_discript: \"그럭저럭\",\n  emotion_clicked: \"EmotionItem_on_3\"\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n  emotion_discript: \"나쁨\",\n  emotion_clicked: \"EmotionItem_off\"\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n  emotion_discript: \"끔찍함\",\n  emotion_clicked: \"EmotionItem_off\"\n}];\nconst DiaryEditor = () => {\n  _s();\n  const navigate = useNavigate();\n\n  //날짜 선택 관리\n  const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\n\n  //감정 선택 관리\n  const [emotion, setEmotion] = useState(3);\n  const handleClickEmotion = emotion => {\n    setEmotion(emotion);\n    handleEmotionName();\n  };\n  const handleEmotionName = () => {\n    emotionList.map(it => {\n      if (it.emotion_id === emotion) {\n        emotionList = [...emotionList, it.emotion_id = `EmotionItem_on_${it.emotion_id}`];\n      } else {\n        emotionList = [...emotionList, it.emotion_id = \"EmotionItem_off\"];\n      }\n    });\n  };\n\n  //본문 작성 관리\n  const [content, setContent] = useState(\"\");\n  const contentInput = useRef();\n\n  //context로부터 onCreate 함수를 받아옴\n  const onCreate = useContext(DiaryDispatchContext).onCreate;\n  const AddNewDiary = () => {\n    if (window.confirm(\"새로운 일기를 작성하시겠습니까?\")) {\n      const newDate = new Date(date).getTime();\n      onCreate({\n        emotion,\n        content,\n        date: newDate\n      });\n      setDate(new Date().toISOString().slice(0, 10));\n      setEmotion(3);\n      setContent(\"\");\n      navigate(-1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            type: \"date\",\n            value: date,\n            onChange: e => {\n              setDate(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n            onClick: handleClickEmotion,\n            ...it\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box text_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: contentInput,\n            placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB0A8\",\n            value: content,\n            onChange: e => {\n              contentInput.current.focus();\n              setContent(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control_box\",\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"취소하기\",\n            type: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"작성 완료\",\n            type: \"positive\",\n            onClick: AddNewDiary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryEditor, \"qUMPKVbKTMa+9WDx4CweKXF/OWI=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["useContext","useRef","useState","MyButton","DiaryDispatchContext","useNavigate","EmotionItem","jsxDEV","_jsxDEV","env","process","PUBLIC_URL","emotionList","emotion_id","emotion_img","emotion_discript","emotion_clicked","DiaryEditor","_s","navigate","date","setDate","Date","toISOString","slice","emotion","setEmotion","handleClickEmotion","handleEmotionName","map","it","content","setContent","contentInput","onCreate","AddNewDiary","window","confirm","newDate","getTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","ref","placeholder","current","focus","text","_c","$RefreshReg$"],"sources":["/Users/yminjuu/Documents/개인 플젝/React.js Project/EmotionDiary/src/components/DiaryEditor.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport MyButton from \"./MyButton\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport EmotionItem from \"./EmotionItem\";\n\nconst env = process.env;\nenv.PUBLIC_URL = env.PUBLIC_URL || \"\";\n\nconst emotionList = [\n  {\n    emotion_id: 1,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n    emotion_discript: \"완전 좋음\",\n    emotion_clicked: \"EmotionItem_off\",\n  },\n  {\n    emotion_id: 2,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n    emotion_discript: \"좋음\",\n    emotion_clicked: \"EmotionItem_off\",\n  },\n  {\n    emotion_id: 3,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n    emotion_discript: \"그럭저럭\",\n    emotion_clicked: \"EmotionItem_on_3\",\n  },\n  {\n    emotion_id: 4,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n    emotion_discript: \"나쁨\",\n    emotion_clicked: \"EmotionItem_off\",\n  },\n  {\n    emotion_id: 5,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n    emotion_discript: \"끔찍함\",\n    emotion_clicked: \"EmotionItem_off\",\n  },\n];\n\nconst DiaryEditor = () => {\n  const navigate = useNavigate();\n\n  //날짜 선택 관리\n  const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\n\n  //감정 선택 관리\n  const [emotion, setEmotion] = useState(3);\n\n  const handleClickEmotion = (emotion) => {\n    setEmotion(emotion);\n    handleEmotionName();\n  };\n\n  const handleEmotionName = () => {\n    emotionList.map((it) => {\n      if (it.emotion_id === emotion) {\n        emotionList = [\n          ...emotionList,\n          (it.emotion_id = `EmotionItem_on_${it.emotion_id}`),\n        ];\n      } else {\n        emotionList = [...emotionList, (it.emotion_id = \"EmotionItem_off\")];\n      }\n    });\n  };\n\n  //본문 작성 관리\n  const [content, setContent] = useState(\"\");\n\n  const contentInput = useRef();\n\n  //context로부터 onCreate 함수를 받아옴\n  const onCreate = useContext(DiaryDispatchContext).onCreate;\n\n  const AddNewDiary = () => {\n    if (window.confirm(\"새로운 일기를 작성하시겠습니까?\")) {\n      const newDate = new Date(date).getTime();\n      onCreate({ emotion, content, date: newDate });\n      setDate(new Date().toISOString().slice(0, 10));\n      setEmotion(3);\n      setContent(\"\");\n      navigate(-1);\n    }\n  };\n\n  return (\n    <div className=\"DiaryEditor\">\n      <div>\n        <section>\n          <h4>오늘은 언제인가요?</h4>\n          <div className=\"input_box\">\n            <input\n              className=\"input_date\"\n              type=\"date\"\n              value={date}\n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n            ></input>\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 감정</h4>\n          <div className=\"input_box emotion_list_wrapper\">\n            {emotionList.map((it) => (\n              <EmotionItem\n                onClick={handleClickEmotion}\n                key={it.emotion_id}\n                {...it}\n              ></EmotionItem>\n            ))}\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 일기</h4>\n          <div className=\"input_box text_wrapper\">\n            <textarea\n              ref={contentInput}\n              placeholder=\"오늘은 어땠남\"\n              value={content}\n              onChange={(e) => {\n                contentInput.current.focus();\n                setContent(e.target.value);\n              }}\n            ></textarea>\n          </div>\n        </section>\n        <section>\n          <div className=\"control_box\">\n            <MyButton text={\"취소하기\"} type={\"default\"}></MyButton>\n            <MyButton\n              text={\"작성 완료\"}\n              type={\"positive\"}\n              onClick={AddNewDiary}\n            ></MyButton>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}